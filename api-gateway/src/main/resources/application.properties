server.port=8080

# Application Info
spring.application.name=api-gateway
info.app.name=Library Management API Gateway
info.app.description=API Gateway for Library Management System
info.app.version=1.0.0

# Eureka Configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Redis Configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000ms

# Gateway Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# CORS Configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*

# Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.user-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.search-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.loan-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.gamification-service.registerHealthIndicator=true

# Logging Configuration
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.com.example.apigateway=DEBUG

# Management Endpoints
management.endpoints.web.exposure.include=health,info,metrics,gateway
management.endpoint.health.show-details=always
management.endpoint.gateway.enabled=true
